{"version":3,"file":"js/app.1b3759d9.js","mappings":"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","sources":["webpack://my-first-app/./src/App.vue","webpack://my-first-app/./src/App.vue?7ccd","webpack://my-first-app/./src/views/HomePage.vue","webpack://my-first-app/./src/views/HomePage.vue?150d","webpack://my-first-app/./src/stores/mapStore.js","webpack://my-first-app/./src/components/LayerControl.vue","webpack://my-first-app/./src/components/LayerControl.vue?8371","webpack://my-first-app/./src/components/FeaturePanel.vue","webpack://my-first-app/./src/components/FeaturePanel.vue?e72f","webpack://my-first-app/./src/components/StatisticsChart.vue","webpack://my-first-app/./src/components/StatisticsChart.vue?4896","webpack://my-first-app/./src/views/MapPage.vue","webpack://my-first-app/./src/views/MapPage.vue?12b3","webpack://my-first-app/./src/views/AboutPage.vue","webpack://my-first-app/./src/views/AboutPage.vue?e075","webpack://my-first-app/./src/views/Map3DPage.vue","webpack://my-first-app/./src/views/Map3DPage.vue?d7ac","webpack://my-first-app/./src/router/Index.js","webpack://my-first-app/./src/main.js","webpack://my-first-app/webpack/bootstrap","webpack://my-first-app/webpack/runtime/chunk loaded","webpack://my-first-app/webpack/runtime/compat get default export","webpack://my-first-app/webpack/runtime/define property getters","webpack://my-first-app/webpack/runtime/global","webpack://my-first-app/webpack/runtime/hasOwnProperty shorthand","webpack://my-first-app/webpack/runtime/make namespace object","webpack://my-first-app/webpack/runtime/node module decorator","webpack://my-first-app/webpack/runtime/jsonp chunk loading","webpack://my-first-app/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app-layout\">\n    <header class=\"app-header\">\n      <div class=\"logo\">城市探索者</div>\n      <nav class=\"main-nav\">\n        <router-link to=\"/\">首页</router-link>\n        <router-link to=\"/map\">地图页</router-link>\n        <router-link to=\"/map3D\">3D地图页</router-link>\n        <router-link to=\"/about\">关于项目</router-link>\n      </nav>\n    </header>\n    <main class=\"app-main\">\n      <router-view></router-view>\n    </main>\n    <footer class=\"app-footer\">\n      <p>© 2025 秦亚会. All Rights Reserved.</p>\n    </footer>\n  </div>\n</template>\n\n<script setup>\n// 作为纯布局组件，App.vue通常不需要任何JS逻辑\n</script>\n\n<style scoped>\n#app-layout {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  /* 继承来自html/body/app的100%高度 */\n}\n\n.app-header {\n  flex-shrink: 0;\n  /* 防止被压缩 */\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 30px;\n  border-bottom: 1px solid #eaecef;\n}\n\n.logo {\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n\n.main-nav a {\n  font-weight: bold;\n  color: #2c3e50;\n  text-decoration: none;\n  margin-left: 20px;\n}\n\n.main-nav a.router-link-exact-active {\n  color: #42b983;\n}\n\n.app-main {\n  flex-grow: 1;\n  /* 占据所有剩余空间，把页脚推到底部 */\n  position: relative;\n  /* 为内部绝对定位的元素提供参照 */\n  overflow: hidden;\n  /* 防止地图等内容溢出 */\n}\n\n.app-footer {\n  flex-shrink: 0;\n  /* 防止被压缩 */\n  text-align: center;\n  padding: 15px;\n  background-color: #f8f9fa;\n  font-size: 0.8rem;\n  color: #6c757d;\n}\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3bfd67fa&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3bfd67fa\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"page-container\">\r\n        <h1>欢迎来到 \"城市探索者\" 平台</h1>\r\n        <p>在这里，我们将使用现代Web技术，探索和可视化我们生活的城市空间。</p>\r\n        <router-link to=\"/map\">\r\n            <button class=\"action-button\">开始探索地图</button>\r\n        </router-link>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.page-container {\r\n    text-align: center;\r\n    padding-top: 50px;\r\n}\r\n\r\n.action-button {\r\n    margin-top: 20px;\r\n    padding: 10px 20px;\r\n    font-size: 1.2rem;\r\n    cursor: pointer;\r\n    background-color: #42b983;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n}\r\n</style>","import { render } from \"./HomePage.vue?vue&type=template&id=d5840632&scoped=true\"\nconst script = {}\n\nimport \"./HomePage.vue?vue&type=style&index=0&id=d5840632&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d5840632\"]])\n\nexport default __exports__","import { defineStore } from 'pinia';\r\nimport { ref, computed } from 'vue';\r\nimport axios from 'axios';\r\n\r\nexport const useMapStore = defineStore('mapStore', () => {\r\n    const provinces = ref([]);\r\n    // const cityLayerVisible = ref(false);\r\n    const selectedFeature = ref(null);\r\n    const mapStats = ref({ cityCount: 0 });\r\n    const selectedProvinceCitiesStats = ref(null);\r\n    const isLoadingStats = ref(false);\r\n\r\n    // --- (核心) 新增一个字符串来管理“城市图层”的显示模式 ---\r\n    const cityDisplayMode = ref('cluster'); // 初始模式为'面'\r\n    // 可选值: 'none' (不显示), 'fill' (显示面), 'cluster' (显示聚合点)\r\n\r\n    const selectedFeatureProperties = computed(() => {\r\n        return selectedFeature.value ? selectedFeature.value.feature.properties : null;\r\n    });\r\n\r\n    const provinceLayerVisible = computed({\r\n        get: () => provinces.value.length > 0 ? provinces.value.every(p => p.visible) : true,\r\n        set: (value) => provinces.value.forEach(p => p.visible = value)\r\n    });\r\n\r\n    function initializeProvinces(data) {\r\n        provinces.value = data;\r\n    }\r\n    /*\r\n        function toggleCityLayerVisibility() {\r\n            cityLayerVisible.value = !cityLayerVisible.value;\r\n        }\r\n            */\r\n    // --- (核心) 新增一个Action来改变城市显示模式 ---\r\n    function setCityDisplayMode(mode) {\r\n        cityDisplayMode.value = mode;\r\n    }\r\n\r\n    function setSelectedFeature(type, feature) {\r\n        if (feature) {\r\n            selectedFeature.value = { type, feature };\r\n        } else {\r\n            selectedFeature.value = null;\r\n        }\r\n    }\r\n\r\n    function updateMapStats(stats) {\r\n        mapStats.value = stats;\r\n    }\r\n    /*\r\n    async function fetchCityStatsForProvince(provinceName) {\r\n        if (!provinceName) {\r\n            selectedProvinceCitiesStats.value = null;\r\n            return;\r\n        }\r\n        isLoadingStats.value = true;\r\n        try {\r\n            const apiUrl = `http://localhost:8000/api/provinces/${provinceName}/cities-with-area`;\r\n            const response = await axios.get(apiUrl);\r\n            selectedProvinceCitiesStats.value = response.data;\r\n        } catch (error) {\r\n            console.error(\"获取城市统计数据失败:\", error);\r\n            selectedProvinceCitiesStats.value = null;\r\n        } finally {\r\n            isLoadingStats.value = false;\r\n        }\r\n    }\r\n    */\r\n    async function fetchCityStatsForProvince(provinceName) {\r\n        if (!provinceName) {\r\n            selectedProvinceCitiesStats.value = null;\r\n            return;\r\n        }\r\n        isLoadingStats.value = true;\r\n        try {\r\n            // --- 核心修改：不再请求API，而是请求静态JSON ---\r\n            if (!window.allProvinceStats) { // 加一个缓存，只请求一次\r\n                const response = await axios.get(`${process.env.BASE_URL}province_city_stats.json`);\r\n                window.allProvinceStats = response.data;\r\n            }\r\n            // 从缓存的数据中，直接查找对应省份的数据\r\n            selectedProvinceCitiesStats.value = window.allProvinceStats[provinceName] || [];\r\n        } catch (error) {\r\n            console.error(\"获取城市统计数据失败:\", error);\r\n            selectedProvinceCitiesStats.value = null;\r\n        } finally {\r\n            isLoadingStats.value = false;\r\n        }\r\n    }\r\n\r\n    return {\r\n        provinces, cityDisplayMode, selectedFeature, mapStats,\r\n        selectedProvinceCitiesStats, isLoadingStats, selectedFeatureProperties,\r\n        provinceLayerVisible,\r\n        initializeProvinces, setCityDisplayMode,\r\n        setSelectedFeature, updateMapStats, fetchCityStatsForProvince\r\n    };\r\n});","<template>\r\n    <div class=\"panel-wrapper\" :class=\"{ collapsed: isCollapsed }\">\r\n        <!-- 抽屉式开关按钮 -->\r\n        <div class=\"toggle-button\" @click=\"isCollapsed = !isCollapsed\">\r\n            <el-icon><el-icon-arrow-right v-if=\"isCollapsed\" /><el-icon-arrow-left v-else /></el-icon>\r\n        </div>\r\n\r\n        <el-card class=\"layer-control-panel\">\r\n            <template #header><span>图层控制</span></template>\r\n            <div v-show=\"!isCollapsed\" class=\"panel-content\">\r\n                <div class=\"master-control\">\r\n                    <el-checkbox v-model=\"mapStore.provinceLayerVisible\" label=\"所有省份\" size=\"large\" />\r\n                    <el-divider />\r\n\r\n                    <!-- (核心) 城市图层模式选择器 -->\r\n                    <p class=\"sub-title\">城市图层显示模式:</p>\r\n                    <el-radio-group :model-value=\"mapStore.cityDisplayMode\"\r\n                        @update:modelValue=\"mapStore.setCityDisplayMode\" size=\"small\">\r\n                        <el-radio-button label=\"none\">不显示</el-radio-button>\r\n                        <el-radio-button label=\"fill\">显示为面</el-radio-button>\r\n                        <el-radio-button label=\"cluster\">显示为点(聚合)</el-radio-button>\r\n                    </el-radio-group>\r\n\r\n                    <el-divider />\r\n                    <p class=\"sub-title\">单独控制省份:</p>\r\n                    <div class=\"province-list\">\r\n                        <el-checkbox-group v-model=\"visibleProvinceNames\">\r\n                            <div v-for=\"province in mapStore.provinces\" :key=\"province.id\" class=\"province-item\">\r\n                                <el-checkbox :label=\"province.name\" />\r\n                            </div>\r\n                        </el-checkbox-group>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport { useMapStore } from '../stores/mapStore';\r\nimport { ArrowLeft as ElIconArrowLeft, ArrowRight as ElIconArrowRight } from '@element-plus/icons-vue';\r\n\r\nconst mapStore = useMapStore();\r\nconst isCollapsed = ref(false);\r\n\r\nconst visibleProvinceNames = computed({\r\n    get() { return mapStore.provinces.filter(p => p.visible).map(p => p.name); },\r\n    set(newVisibleNames) {\r\n        mapStore.provinces.forEach(province => {\r\n            province.visible = newVisibleNames.includes(province.name);\r\n        });\r\n    }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 抽屉式布局 + 面板样式 (左侧版本) */\r\n.panel-wrapper {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 0;\r\n    /* 1. 定位在屏幕左侧 */\r\n    z-index: 1000;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    /* 2. (核心) 反转Flex的主轴方向！ */\r\n    align-items: center;\r\n    transition: transform 0.3s ease-in-out;\r\n}\r\n\r\n/* 3. 当折叠时，向左移出 */\r\n.panel-wrapper.collapsed {\r\n    transform: translateX(calc(-100% + 40px));\r\n}\r\n\r\n.toggle-button {\r\n    width: 20px;\r\n    height: 60px;\r\n    background-color: #fff;\r\n    border: 1px solid #dcdfe6;\r\n    border-left: none;\r\n    /* 4. 左边框不要，让它和面板无缝连接 */\r\n    border-radius: 0 6px 6px 0;\r\n    /* 5. 右边是圆角，左边是直角 */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    box-shadow: 2px 0 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.layer-control-panel {\r\n    width: 220px;\r\n}\r\n\r\n.card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.panel-content {\r\n    max-height: calc(100vh - 250px);\r\n    overflow-y: auto;\r\n}\r\n\r\n.master-control {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.sub-title {\r\n    font-size: 12px;\r\n    color: #999;\r\n    margin: 10px 0 5px;\r\n}\r\n\r\n.province-list .province-item {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n}\r\n</style>","import script from \"./LayerControl.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LayerControl.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LayerControl.vue?vue&type=style&index=0&id=1e87ac90&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1e87ac90\"]])\n\nexport default __exports__","<template>\r\n    <!-- 1. 最外层的 v-if 决定面板是否“存在” -->\r\n    <div v-if=\"mapStore.selectedFeature\" class=\"panel-wrapper\" :class=\"{ collapsed: isCollapsed }\">\r\n\r\n        <!-- 抽屉式开关按钮 -->\r\n        <div class=\"toggle-button\" @click=\"isCollapsed = !isCollapsed\">\r\n            <el-icon>\r\n                <ArrowRightBold v-if=\"isCollapsed\" />\r\n                <ArrowLeftBold v-else />\r\n            </el-icon>\r\n        </div>\r\n\r\n        <el-card class=\"feature-panel\">\r\n            <template #header>\r\n                <div class=\"card-header\">\r\n                    <span>要素详情</span>\r\n                    <!-- 2. (核心) 关闭按钮，只负责调用action清空选中状态 -->\r\n                    <el-button :icon=\"Close\" circle size=\"small\" @click=\"mapStore.setSelectedFeature(null, null)\"\r\n                        title=\"清空选择\" />\r\n                </div>\r\n            </template>\r\n\r\n            <!-- 3. v-show 控制内容的显示/隐藏 -->\r\n            <div v-show=\"!isCollapsed\" class=\"feature-content\">\r\n                <el-descriptions\r\n                    v-if=\"mapStore.selectedFeatureProperties && Object.keys(mapStore.selectedFeatureProperties).length > 0\"\r\n                    :column=\"1\" border size=\"small\" class=\"description-table\">\r\n                    <el-descriptions-item v-for=\"(value, key) in mapStore.selectedFeatureProperties\" :key=\"key\"\r\n                        :label=\"key\">\r\n                        {{ value }}\r\n                    </el-descriptions-item>\r\n                </el-descriptions>\r\n\r\n                <el-empty v-else description=\"无属性信息\" />\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useMapStore } from '../stores/mapStore';\r\nimport { ArrowLeftBold, ArrowRightBold, Close } from '@element-plus/icons-vue';\r\n\r\nconst mapStore = useMapStore();\r\nconst isCollapsed = ref(false);\r\n</script>\r\n\r\n<style scoped>\r\n/* 抽屉式布局 + 面板样式 */\r\n.panel-wrapper {\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 0;\r\n    z-index: 1000;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: transform 0.3s ease-in-out;\r\n}\r\n\r\n.panel-wrapper.collapsed {\r\n    transform: translateX(calc(100% - 40px));\r\n}\r\n\r\n.toggle-button {\r\n    width: 20px;\r\n    height: 60px;\r\n    background-color: #fff;\r\n    border: 1px solid #dcdfe6;\r\n    border-right: none;\r\n    border-radius: 6px 0 0 6px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    box-shadow: -2px 0 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.feature-panel {\r\n    width: 320px;\r\n}\r\n\r\n.card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.feature-content {\r\n    max-height: calc(100vh - 200px);\r\n    overflow-y: auto;\r\n}\r\n</style>","import script from \"./FeaturePanel.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FeaturePanel.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FeaturePanel.vue?vue&type=style&index=0&id=5c9ca4f8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5c9ca4f8\"]])\n\nexport default __exports__","<template>\r\n    <!-- 1. 抽屉式布局的容器 -->\r\n    <div class=\"panel-wrapper\" :class=\"{ collapsed: isCollapsed }\">\r\n\r\n        <!-- 开关按钮 -->\r\n        <div class=\"toggle-button\" @click=\"isCollapsed = !isCollapsed\">\r\n            <el-icon><el-icon-arrow-right v-if=\"isCollapsed\" /><el-icon-arrow-left v-else /></el-icon>\r\n        </div>\r\n\r\n        <el-card class=\"chart-panel\" v-loading=\"mapStore.isLoadingStats\" element-loading-text=\"正在查询分析...\">\r\n\r\n            <div v-show=\"!isCollapsed\" class=\"panel-content\">\r\n                <!-- \r\n          2. (核心) v-if / v-else 智能切换图表模式\r\n             当“选中省份的城市统计”有数据时，显示饼图\r\n        -->\r\n                <div v-if=\"shouldShowPieChart\" class=\"chart-wrapper\">\r\n                    <h4>{{ chartTitle }}</h4>\r\n                    <div ref=\"pieChartDom\" style=\"width: 100%; height: 250px;\"></div>\r\n                </div>\r\n\r\n                <!-- 否则，显示默认的仪表盘 -->\r\n                <div v-else class=\"chart-wrapper\">\r\n                    <h4>当前视野内城市统计</h4>\r\n                    <div ref=\"gaugeChartDom\" style=\"width: 100%; height: 250px;\"></div>\r\n                </div>\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, nextTick, onUnmounted, computed } from 'vue';\r\nimport * as echarts from 'echarts';\r\nimport { useMapStore } from '../stores/mapStore';\r\nimport { ArrowLeft as ElIconArrowLeft, ArrowRight as ElIconArrowRight } from '@element-plus/icons-vue';\r\n\r\nconst mapStore = useMapStore();\r\nconst isCollapsed = ref(false);\r\n\r\nconst gaugeChartDom = ref(null);\r\nconst pieChartDom = ref(null);\r\nlet gaugeChart = null;\r\nlet pieChart = null;\r\n\r\n// --- 3. (核心) 用计算属性来决定显示哪个图表，逻辑更清晰 ---\r\nconst shouldShowPieChart = computed(() => {\r\n    return mapStore.selectedProvinceCitiesStats && mapStore.selectedProvinceCitiesStats.length > 0;\r\n});\r\n\r\nconst chartTitle = computed(() => {\r\n    if (mapStore.selectedFeature && mapStore.selectedFeature.type === 'province') {\r\n        return `${mapStore.selectedFeature.feature.properties.name} 城市面积占比`;\r\n    }\r\n    return '城市面积占比';\r\n});\r\n\r\n// --- 4. 封装独立的渲染函数，职责更单一 ---\r\n\r\n// 渲染或更新仪表盘\r\nfunction renderGaugeChart() {\r\n    if (gaugeChartDom.value) {\r\n        if (!gaugeChart) {\r\n            gaugeChart = echarts.init(gaugeChartDom.value);\r\n        }\r\n        gaugeChart.setOption({\r\n            series: [{\r\n                type: 'gauge',\r\n                detail: { formatter: '{value}' },\r\n                data: [{ value: mapStore.mapStats.cityCount, name: '城市数量' }]\r\n            }]\r\n        });\r\n    }\r\n}\r\n\r\n// 渲染或更新饼图\r\nfunction renderPieChart() {\r\n    if (pieChartDom.value && shouldShowPieChart.value) {\r\n        if (!pieChart) {\r\n            pieChart = echarts.init(pieChartDom.value);\r\n        }\r\n        const chartData = mapStore.selectedProvinceCitiesStats\r\n            .map(city => ({\r\n                name: city.city_name,\r\n                value: (city.area_sqm / 1000000).toFixed(2)\r\n            }))\r\n            .sort((a, b) => b.value - a.value)\r\n            .slice(0, 10);\r\n\r\n        pieChart.setOption({\r\n            title: { text: 'TOP10 城市面积 (km²)', left: 'center', textStyle: { fontSize: 12 } },\r\n            tooltip: { trigger: 'item', formatter: '{b}: {c} km² ({d}%)', confine: true },\r\n            series: [{\r\n                type: 'pie',\r\n                radius: '70%',\r\n                data: chartData,\r\n                emphasis: { itemStyle: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' } }\r\n            }]\r\n        });\r\n    }\r\n}\r\n\r\n// --- 最终的、唯一的、智能的watch，负责调度所有渲染 ---\r\nwatch(\r\n    () => [mapStore.selectedFeature, mapStore.mapStats],\r\n    () => {\r\n        // 使用nextTick，确保v-if/v-else已经完成了DOM的切换\r\n        nextTick(() => {\r\n            if (shouldShowPieChart.value) {\r\n                // --- 饼图模式 ---\r\n                if (gaugeChart) { // 如果仪表盘存在，就销毁它\r\n                    gaugeChart.dispose();\r\n                    gaugeChart = null;\r\n                }\r\n                renderPieChart();\r\n            } else {\r\n                // --- 仪表盘模式 ---\r\n                if (pieChart) { // 如果饼图存在，就销毁它\r\n                    pieChart.dispose();\r\n                    pieChart = null;\r\n                }\r\n                renderGaugeChart();\r\n            }\r\n        });\r\n    },\r\n    { deep: true, immediate: true }\r\n);\r\n\r\n// --- (核心) 监听折叠状态，调整图表大小 ---\r\nwatch(isCollapsed, (newCollapsedState) => {\r\n    if (!newCollapsedState) {\r\n        setTimeout(() => {\r\n            if (pieChart) pieChart.resize();\r\n            if (gaugeChart) gaugeChart.resize();\r\n        }, 350); // 延迟时间略长于CSS动画\r\n    }\r\n});\r\n\r\nonUnmounted(() => {\r\n    if (gaugeChart) gaugeChart.dispose();\r\n    if (pieChart) pieChart.dispose();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 抽屉式布局 + 面板样式 (左下角版本) */\r\n.panel-wrapper {\r\n    position: absolute;\r\n    bottom: 40px;\r\n    /* 距离底部40px */\r\n    left: 0;\r\n    /* 定位在屏幕左侧 */\r\n    z-index: 1000;\r\n    display: flex;\r\n    align-items: center;\r\n    /* 垂直居中对齐按钮和面板 */\r\n    transition: transform 0.3s ease-in-out;\r\n}\r\n\r\n.panel-wrapper.collapsed {\r\n    transform: translateX(calc(-100% + 40px));\r\n    /* 向左移出，只留40px */\r\n}\r\n\r\n.toggle-button {\r\n    width: 20px;\r\n    height: 60px;\r\n    background-color: #fff;\r\n    border: 1px solid #dcdfe6;\r\n    border-left: none;\r\n    border-radius: 0 6px 6px 0;\r\n    /* 右边是圆角 */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    box-shadow: 2px 0 8px rgba(0, 0, 0, 0.1);\r\n    /* (核心) 为了让按钮和面板主体水平排列 */\r\n    order: 2;\r\n}\r\n\r\n.chart-panel {\r\n    width: 380px;\r\n    order: 1;\r\n    /* (核心) 让面板在按钮的左边 */\r\n}\r\n\r\n.panel-content {\r\n    max-height: calc(100vh - 250px);\r\n    overflow-y: auto;\r\n    padding: 10px;\r\n    /* 添加内边距，避免内容贴边 */\r\n    background-color: #f9f9f9;\r\n    /* 设置背景色，增加可读性 */\r\n    border-radius: 6px;\r\n    /* 圆角边框，和按钮风格一致 */\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n    /* 添加阴影效果，增加层次感 */\r\n    transition: all 0.3s ease-in-out;\r\n    /* 平滑过渡效果 */\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* 让内容垂直排列 */\r\n    align-items: center;\r\n    /* 水平居中对齐内容 */\r\n    justify-content: center;\r\n    /* 垂直居中对齐内容 */\r\n    gap: 10px;\r\n    /* 设置内容之间的间距 */\r\n    font-size: 14px;\r\n    /* 设置字体大小 */\r\n    color: #333;\r\n    /* 设置字体颜色 */\r\n    text-align: center;\r\n    /* 文本居中对齐 */\r\n    line-height: 1.5;\r\n    /* 设置行高，增加可读性 */\r\n}\r\n\r\n.chart-wrapper {\r\n    width: 100%;\r\n}\r\n\r\nh4 {\r\n    text-align: center;\r\n    margin: 0 0 10px 0;\r\n    color: #333;\r\n}\r\n</style>","import script from \"./StatisticsChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StatisticsChart.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./StatisticsChart.vue?vue&type=style&index=0&id=1d8e4870&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1d8e4870\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"map-page-container\">\r\n        <LayerControl />\r\n        <FeaturePanel />\r\n        <StatisticsChart />\r\n        <div ref=\"mapContainer\" class=\"map-container\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, onUnmounted, ref, watch } from 'vue';\r\nimport axios from 'axios';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { useMapStore } from '../stores/mapStore.js';\r\n\r\nimport LayerControl from '../components/LayerControl.vue';\r\nimport FeaturePanel from '../components/FeaturePanel.vue';\r\nimport StatisticsChart from '../components/StatisticsChart.vue';\r\n\r\nconst mapContainer = ref(null);\r\nlet map = null;\r\nconst mapStore = useMapStore();\r\n// --- 1. (核心) 在组件的顶层作用域，定义一个变量来持有source ---\r\nlet highlightSource = null;\r\nconst MAPTILER_KEY = 'KNvedDoPlLw61gg1Kn4l'; // 替换为你的Key\r\nmapboxgl.accessToken = MAPTILER_KEY;\r\n\r\n// --- 2. 生命周期钩子 ---\r\nonMounted(() => {\r\n    const styleUrl = `https://api.maptiler.com/maps/streets-v2/style.json?key=${MAPTILER_KEY}`;\r\n    map = new mapboxgl.Map({\r\n        container: mapContainer.value,\r\n        style: styleUrl,\r\n        center: [104, 35],\r\n        zoom: 3.5\r\n    });\r\n    map.on('load', setupMap);\r\n});\r\n\r\nonUnmounted(() => {\r\n    if (map) map.remove();\r\n});\r\n\r\n\r\n// --- 3. 地图设置总函数 (只在load后执行一次) ---\r\nasync function setupMap() {\r\n    try {\r\n        // a. 加载数据并初始化Store\r\n        // --- 1. (核心) 并发加载所有需要的【静态】数据文件 ---\r\n        const [provinceResponse, cityPointsResponse] = await Promise.all([\r\n            fetch(`${process.env.BASE_URL}provinces_of_china.json`),\r\n            fetch(`${process.env.BASE_URL}china_cities_points.json`)\r\n        ]);\r\n        const provinceGeoJsonData = await provinceResponse.json();\r\n        const cityPointsGeoJson = await cityPointsResponse.json();\r\n        const initialProvinces = provinceGeoJsonData.features.map(f => ({\r\n            id: f.properties.name,\r\n            name: f.properties.name,\r\n            visible: true,\r\n            feature: f\r\n        }));\r\n        mapStore.initializeProvinces(initialProvinces);\r\n\r\n        // b. 添加所有Source和Layer (只添加一次！)\r\n        map.addSource('provinces-source', { type: 'geojson', data: provinceGeoJsonData, promoteId: 'name' });\r\n        map.addLayer({\r\n            id: 'provinces-layer', type: 'fill', source: 'provinces-source',\r\n            paint: {\r\n                'fill-color': ['case', ['boolean', ['feature-state', 'selected'], false], '#FFD700', ['boolean', ['feature-state', 'hover'], false], '#FFA500', '#088'],\r\n                'fill-opacity': 0.5, 'fill-outline-color': '#fff'\r\n            }\r\n        });\r\n\r\n        // --- 2. (核心修复) 使用正确的`url`属性，并【检查真实的source-layer】 ---\r\n        const tileJsonUrl = `https://api.maptiler.com/tiles/0198dc07-9e93-7368-9269-00c754ca38a4/tiles.json?key=KNvedDoPlLw61gg1Kn4l`;\r\n\r\n        // --- 2a. (终极侦察) 动态地获取真实的source-layer名称 ---\r\n        const tileJsonResponse = await axios.get(tileJsonUrl);\r\n        const realSourceLayerName = tileJsonResponse.data.vector_layers[0].id;\r\n        console.log(\"侦察到的真实Source Layer名称是:\", realSourceLayerName);\r\n\r\n        // --- 2. (核心修复) 使用正确的`url`属性来加载矢量瓦片 ---\r\n        if (!map.getSource('cities-vt-source')) {\r\n            map.addSource('cities-vt-source', {\r\n                'type': 'vector',\r\n                'url': tileJsonUrl\r\n            });\r\n        }\r\n        if (!map.getLayer('cities-vt-layer')) {\r\n            map.addLayer({\r\n                'id': 'cities-vt-layer',\r\n                'type': 'fill',\r\n                'source': 'cities-vt-source',\r\n                'source-layer': realSourceLayerName,\r\n                'layout': { 'visibility': mapStore.cityLayerVisible ? 'visible' : 'none' },\r\n                'paint': {\r\n                    'fill-color': '#f08',\r\n                    'fill-opacity': 0.4\r\n                }\r\n            });\r\n        }\r\n\r\n        // c. (核心) 添加高亮专用Source和Layer，并立刻获取其实例\r\n        map.addSource('highlight-source', { type: 'geojson', data: null });\r\n        map.addLayer({ id: 'highlight-layer', type: 'fill', source: 'highlight-source', paint: { 'fill-color': '#FFFF00', 'fill-opacity': 0.7 } });\r\n        highlightSource = map.getSource('highlight-source'); // <-- 在这里获取并赋值给顶层变量\r\n        /*\r\n                // --- 1. (核心) 调用我们自己的后端API，获取城市质心点数据 ---\r\n                const cityCentroidsUrl = 'http://localhost:3000/api/cities-centroids';\r\n                const cityPointsResponse = await axios.get(cityCentroidsUrl);\r\n                const cityPointsGeoJson = cityPointsResponse.data;\r\n                */\r\n\r\n        // --- 2. (核心) 添加一个【可聚合】的数据源 ---\r\n        if (!map.getSource('city-points-source')) {\r\n            map.addSource('city-points-source', {\r\n                type: 'geojson',\r\n                data: cityPointsGeoJson,\r\n                cluster: true, // <-- 开启聚合功能的“总开关”！\r\n                clusterMaxZoom: 14, // 在哪个缩放级别停止聚合\r\n                clusterRadius: 50 // 聚合点的半径（像素）\r\n            });\r\n        }\r\n\r\n        // --- 3. (核心) 创建三个独立的图层，来渲染这个数据源 ---\r\n\r\n        // a. 创建【聚合点簇】图层 (带数字的圆圈)\r\n        if (!map.getLayer('clusters-layer')) {\r\n            map.addLayer({\r\n                id: 'clusters-layer',\r\n                type: 'circle',\r\n                source: 'city-points-source',\r\n                filter: ['has', 'point_count'], // 只渲染那些“有point_count属性”的要素，也就是聚合点\r\n                paint: {\r\n                    // 根据点簇内的数量，分级显示不同颜色\r\n                    'circle-color': [\r\n                        'step',\r\n                        ['get', 'point_count'],\r\n                        '#51bbd6', 100, // 数量 < 100 时，用蓝色\r\n                        '#f1f075', 750, // 100 <= 数量 < 750 时，用黄色\r\n                        '#f28cb1'  // 数量 >= 750 时，用粉色\r\n                    ],\r\n                    'circle-radius': [\r\n                        'step',\r\n                        ['get', 'point_count'],\r\n                        20, 100, // 数量 < 100 时，半径20px\r\n                        30, 750, // 100 <= 数量 < 750 时，半径30px\r\n                        40      // 数量 >= 750 时，半径40px\r\n                    ]\r\n                }\r\n            });\r\n        }\r\n\r\n        // b. 创建【聚合点簇内的数字】图层\r\n        if (!map.getLayer('cluster-count-layer')) {\r\n            map.addLayer({\r\n                id: 'cluster-count-layer',\r\n                type: 'symbol',\r\n                source: 'city-points-source',\r\n                filter: ['has', 'point_count'],\r\n                layout: {\r\n                    'text-field': '{point_count_abbreviated}', // 显示被聚合点的数量（自动缩写 K/M）\r\n                    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n                    'text-size': 12\r\n                }\r\n            });\r\n        }\r\n\r\n        // c. 创建【未被聚合的单个点】图层\r\n        if (!map.getLayer('unclustered-point-layer')) {\r\n            map.addLayer({\r\n                id: 'unclustered-point-layer',\r\n                type: 'circle',\r\n                source: 'city-points-source',\r\n                filter: ['!', ['has', 'point_count']], // 只渲染那些“没有point_count属性”的要素\r\n                paint: {\r\n                    'circle-color': '#11b4da',\r\n                    'circle-radius': 6,\r\n                    'circle-stroke-width': 1,\r\n                    'circle-stroke-color': '#fff'\r\n                }\r\n            });\r\n        }\r\n\r\n        // --- 4. (核心) 为聚合点簇添加交互 ---\r\n        map.on('click', 'clusters-layer', (e) => {\r\n            const features = map.queryRenderedFeatures(e.point, { layers: ['clusters-layer'] });\r\n            const clusterId = features[0].properties.cluster_id;\r\n\r\n            // 获取这个点簇的扩展范围(zoom extent)\r\n            map.getSource('city-points-source').getClusterExpansionZoom(\r\n                clusterId,\r\n                (err, zoom) => {\r\n                    if (err) return;\r\n                    // 让地图平滑地放大到可以“炸开”这个点簇的级别\r\n                    map.easeTo({\r\n                        center: features[0].geometry.coordinates,\r\n                        zoom: zoom\r\n                    });\r\n                }\r\n            );\r\n        });\r\n\r\n        // d. 统一设置交互和监听\r\n        setupInteractions();\r\n        setupWatchers();\r\n\r\n        // e. 初始统计和移动监听\r\n        updateChartData();\r\n        map.on('moveend', updateChartData);\r\n        map.on('zoomend', updateChartData);\r\n        map.on('mouseenter', 'clusters-layer', () => { map.getCanvas().style.cursor = 'pointer'; });\r\n        map.on('mouseleave', 'clusters-layer', () => { map.getCanvas().style.cursor = ''; });\r\n\r\n    } catch (error) { console.error(\"地图设置失败:\", error); }\r\n}\r\n\r\n// --- 4. 统一的交互处理器 ---\r\nfunction setupInteractions() {\r\n    let hoveredProvinceId = null;\r\n    map.on('click', (e) => {\r\n        const provinceFeatures = map.queryRenderedFeatures(e.point, { layers: ['provinces-layer'] });\r\n        const cityFeatures = map.queryRenderedFeatures(e.point, { layers: ['cities-vt-layer'] });\r\n\r\n        if (cityFeatures.length > 0) {\r\n            mapStore.setSelectedFeature('city', cityFeatures[0]);\r\n        } else if (provinceFeatures.length > 0) {\r\n            mapStore.setSelectedFeature('province', provinceFeatures[0]);\r\n        } else {\r\n            mapStore.setSelectedFeature(null, null);\r\n        }\r\n    });\r\n\r\n    map.on('mousemove', 'provinces-layer', (e) => {\r\n        map.getCanvas().style.cursor = 'pointer';\r\n        if (e.features.length > 0) {\r\n            if (hoveredProvinceId) map.setFeatureState({ source: 'provinces-source', id: hoveredProvinceId }, { hover: false });\r\n            hoveredProvinceId = e.features[0].properties.name;\r\n            map.setFeatureState({ source: 'provinces-source', id: hoveredProvinceId }, { hover: true });\r\n        }\r\n    });\r\n    map.on('mouseleave', 'provinces-layer', () => {\r\n        map.getCanvas().style.cursor = '';\r\n        if (hoveredProvinceId) map.setFeatureState({ source: 'provinces-source', id: hoveredProvinceId }, { hover: false });\r\n        hoveredProvinceId = null;\r\n    });\r\n}\r\n\r\n// --- 5. 统一的状态侦听器 ---\r\nfunction setupWatchers() {\r\n    let lastSelectedProvinceId = null;\r\n\r\n    // --- 唯一的、监听选中要素变化的watch ---\r\n    watch(() => mapStore.selectedFeature, (newSelection) => {\r\n        // a. 安全检查：确保地图和高亮源都已准备就绪\r\n        if (!map || !map.isStyleLoaded() || !highlightSource) {\r\n            console.warn(\"Watch triggered, but map or highlightSource is not ready.\");\r\n            return;\r\n        }\r\n\r\n        // b. 清除所有旧的高亮（省份feature-state + 城市高亮图层）\r\n        if (lastSelectedProvinceId) {\r\n            map.setFeatureState({ source: 'provinces-source', id: lastSelectedProvinceId }, { selected: false });\r\n        }\r\n        lastSelectedProvinceId = null;\r\n        highlightSource.setData({ type: 'FeatureCollection', features: [] });\r\n\r\n        // c. 根据新的选择，设置新的高亮，并触发Action\r\n        if (newSelection) {\r\n            const { type, feature } = newSelection;\r\n\r\n            if (type === 'province') {\r\n                // 如果选中的是省份\r\n                lastSelectedProvinceId = feature.properties.name;\r\n                map.setFeatureState({ source: 'provinces-source', id: lastSelectedProvinceId }, { selected: true });\r\n                // 触发获取饼图数据的Action\r\n                mapStore.fetchCityStatsForProvince(lastSelectedProvinceId);\r\n            }\r\n            else if (type === 'city') {\r\n                // 如果选中的是城市，就更新高亮图层的数据\r\n                highlightSource.setData(feature);\r\n                // (可选) 清空省份统计数据，让图表切回仪表盘\r\n                mapStore.fetchCityStatsForProvince(null);\r\n            }\r\n        } else {\r\n            // d. 如果是清空选择，也确保清空饼图数据\r\n            mapStore.fetchCityStatsForProvince(null);\r\n        }\r\n    }, { deep: true });\r\n\r\n    // b. 统一处理可见性\r\n    watch(() => mapStore.provinces, (newProvinces) => {\r\n        if (!map || !map.getLayer('provinces-layer')) return;\r\n        const visibleNames = newProvinces.filter(p => p.visible).map(p => p.name);\r\n        map.setFilter('provinces-layer', ['in', 'name', ...visibleNames]);\r\n    }, { deep: true });\r\n\r\n    // --- (核心) 智能的城市图层模式监听器 ---\r\n    watch(() => mapStore.cityDisplayMode, (newMode) => {\r\n        if (!map) return;\r\n\r\n        // 根据新模式，智能地切换图层可见性\r\n        map.setLayoutProperty('cities-vt-layer', 'visibility', newMode === 'fill' ? 'visible' : 'none');\r\n\r\n        // 同时控制三个聚合图层\r\n        ['clusters-layer', 'cluster-count-layer', 'unclustered-point-layer'].forEach(layerId => {\r\n            if (map.getLayer(layerId)) {\r\n                map.setLayoutProperty(layerId, 'visibility', newMode === 'cluster' ? 'visible' : 'none');\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// --- 6. 更新图表数据的函数 ---\r\nfunction updateChartData() {\r\n    if (!map || !map.isStyleLoaded()) return;\r\n    const features = map.queryRenderedFeatures({ layers: ['cities-vt-layer'] });\r\n    const stats = { cityCount: features.length };\r\n    mapStore.updateMapStats(stats);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.map-page-container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.map-container {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n</style>","import script from \"./MapPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MapPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MapPage.vue?vue&type=style&index=0&id=01297777&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-01297777\"]])\n\nexport default __exports__","<template>\r\n    <!-- 1. 用一个容器div把所有内容包起来，并给它一个class -->\r\n    <div class=\"about-container\">\r\n        <div class=\"content-card\">\r\n            <h2>关于项目</h2>\r\n            <p>\r\n                本项目由 <strong>秦亚会</strong> 基于 Vue 3, Vue Router, Pinia, Element Plus, Mapbox GL JS 等现代前端技术构建。\r\n            </p>\r\n            <p>\r\n                旨在学习和实践WebGIS开发的全链路流程，从后端的空间数据处理（PostGIS）、服务发布（GeoServer），到前端的组件化开发与交互式可视化。\r\n            </p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n/* 2. 添加CSS样式 */\r\n.about-container {\r\n    display: flex;\r\n    /* 使用Flexbox布局 */\r\n    justify-content: center;\r\n    /* 水平居中 */\r\n    align-items: flex-start;\r\n    /* 垂直方向从顶部开始对齐 */\r\n    padding-top: 50px;\r\n    /* 距离顶部留出一些空间 */\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #f4f7f6;\r\n    /* 给一个淡淡的背景色 */\r\n}\r\n\r\n.content-card {\r\n    max-width: 800px;\r\n    /* 设置一个最大宽度，让文本不会拉得太长，易于阅读 */\r\n    width: 90%;\r\n    padding: 30px;\r\n    background-color: white;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    text-align: left;\r\n    /* 卡片内部文字左对齐 */\r\n}\r\n\r\nh2 {\r\n    text-align: center;\r\n    /* 标题居中 */\r\n    margin-bottom: 25px;\r\n}\r\n\r\np {\r\n    line-height: 1.8;\r\n    /* 增加行高，阅读更舒适 */\r\n    text-indent: 2em;\r\n    /* 首行缩进两个字符 */\r\n}\r\n</style>","import { render } from \"./AboutPage.vue?vue&type=template&id=fc6d4eb0&scoped=true\"\nconst script = {}\n\nimport \"./AboutPage.vue?vue&type=style&index=0&id=fc6d4eb0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fc6d4eb0\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"map-page-container\">\r\n        <!-- 1. 新增：分析工具UI面板 -->\r\n        <div class=\"analysis-tools\">\r\n            <el-button @click=\"toggleLineOfSight\" :type=\"isLosAnalysisActive ? 'success' : 'primary'\">\r\n                {{ isLosAnalysisActive ? '分析中 (点击结束)' : '开始视线分析' }}\r\n            </el-button>\r\n        </div>\r\n        <div id=\"cesiumContainer\" ref=\"cesiumContainer\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref, onUnmounted } from 'vue';\r\nimport * as Cesium from 'cesium';\r\nimport 'cesium/Build/Cesium/Widgets/widgets.css'; // 我们仍然需要导入CSS\r\n\r\n// --- 核心修改：定义一个全局变量，告诉Cesium去哪里找它的静态资源 ---\r\n// 这个路径，对应的是我们devServer的根目录\r\nwindow.CESIUM_BASE_URL = 'cesium/';\r\n\r\nconst cesiumContainer = ref(null);\r\nlet viewer = null;\r\n\r\n// --- 2. 视线分析所需的状态变量 ---\r\nconst isLosAnalysisActive = ref(false);\r\nlet losStartPoint = null;\r\nconst losEntities = []; // 用于存储所有分析过程中创建的实体，方便清除\r\nlet sceneHandler = null; // 将事件处理器设为全局，方便管理\r\n\r\n\r\n\r\nonMounted(async () => { // 1. 将onMounted改为异步函数\r\n    if (!cesiumContainer.value) return;\r\n\r\n    // --- 2. 设置你的Ion Token ---\r\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwZGYzMWM3Ny1jZDhhLTQ2ZDktYTAzYi00ZTgyZGYxNzkzOTkiLCJpZCI6MzI5Nzk5LCJpYXQiOjE3NTQ1ODA1NDJ9.DB8BghGI977awRcqhMPn8B73YNmRtagq4wVTJKM-F2k';\r\n\r\n    // 3. 创建Viewer实例\r\n    viewer = new Cesium.Viewer(cesiumContainer.value, {\r\n        // 在初始化时，就可以直接指定影像和地形\r\n        imageryProvider: undefined,\r\n        terrainProvider: undefined,\r\n        animation: true,\r\n        timeline: true,\r\n        geocoder: true,\r\n        homeButton: true,\r\n        sceneModePicker: true,\r\n        baseLayerPicker: true,\r\n        navigationHelpButton: true,\r\n        shadows: false,\r\n        shouldAnimate: true,\r\n    });\r\n\r\n    // 启动后续所有异步加载和设置流程\r\n    setupMapLayersAndInteractions();\r\n});\r\n\r\n\r\n// --- 2. 封装所有异步加载和交互设置 ---\r\nasync function setupMapLayersAndInteractions() {\r\n    if (!viewer) return;\r\n\r\n    try {\r\n        // --- a. 并发加载基础场景 ---\r\n        console.log(\"开始加载基础场景（影像，地形，建筑）...\");\r\n        const [imageryProvider, terrainProvider, osmBuildings] = await Promise.all([\r\n            Cesium.IonImageryProvider.fromAssetId(3), // Bing Maps Aerial\r\n            Cesium.createWorldTerrainAsync(),\r\n            Cesium.createOsmBuildingsAsync()\r\n        ]);\r\n\r\n        viewer.imageryProvider = imageryProvider;\r\n        viewer.terrainProvider = terrainProvider;\r\n        viewer.scene.primitives.add(osmBuildings);\r\n        viewer.scene.globe.depthTestAgainstTerrain = true;\r\n        console.log(\"基础场景加载成功！\");\r\n\r\n        try {\r\n            console.log(\"正在创建动态飞行轨迹...\");\r\n            // --- 1. 创建一个“航班时刻表”（SampledPositionProprety） ---\r\n            const positionProperty = new Cesium.SampledPositionProperty();\r\n\r\n            // a. 定义我们的飞行路径的关键帧（时间 + 位置）\r\n            const startTime = Cesium.JulianDate.fromDate(new Date(Date.UTC(2025, 7, 9, 16, 0, 0)));\r\n            const stopTime = Cesium.JulianDate.addSeconds(startTime, 3600, new Cesium.JulianDate());\r\n\r\n            // b. 为“时刻表”添加数据点\r\n            // 第一个点：北京\r\n            const beijingPosition = Cesium.Cartesian3.fromDegrees(116.39, 39.91, 5000.0);\r\n            positionProperty.addSample(startTime, beijingPosition);\r\n\r\n            // 第二个点：经过西安上空\r\n            const xianTime = Cesium.JulianDate.addSeconds(startTime, 1800, new Cesium.JulianDate());\r\n            const xianPosition = Cesium.Cartesian3.fromDegrees(108.95, 34.26, 5000.0);\r\n            positionProperty.addSample(xianTime, xianPosition);\r\n\r\n            // 第三个点：经过上海上空\r\n            const shanghaiPosition = Cesium.Cartesian3.fromDegrees(121.47, 31.23, 5000.0);\r\n            positionProperty.addSample(stopTime, shanghaiPosition);\r\n\r\n            // --- 2. 创建我们的飞机模型实体 ---\r\n            const modelUrl = `${process.env.BASE_URL}models/CesiumAir/Cesium_Air.glb`;\r\n            const aircraftEntity = viewer.entities.add({\r\n                availability: new Cesium.TimeIntervalCollection([\r\n                    new Cesium.TimeInterval({\r\n                        start: startTime,\r\n                        stop: stopTime,\r\n                    }),\r\n                ]),\r\n\r\n                // a. 将位置属性，设置为我们创建的“时刻表”！\r\n                position: positionProperty,\r\n\r\n                // b. 让模型的朝向，自动地沿着轨迹方向\r\n                orientation: new Cesium.VelocityOrientationProperty(positionProperty),\r\n\r\n                model: {\r\n                    uri: modelUrl,\r\n                    minimumPixelSize: 128,\r\n                    // --- 推荐的“酷炫皮肤包” ---\r\n\r\n                    // color: Cesium.Color.WHITE.withAlpha(0.8),\r\n                    colorBlendMode: Cesium.ColorBlendMode.HIGHLIGHT,\r\n\r\n                    // 1. 轮廓光\r\n                    //    我们将用它来让飞机在深色的地形和太空中都清晰可见\r\n                    silhouetteColor: Cesium.Color.fromCssColorString('#00BFFF'), // 科技蓝\r\n                    silhouetteSize: 2.0, // 稍微细一点，更精致\r\n                    color: Cesium.Color.LEMONCHIFFON,\r\n                    // 3. 阴影\r\n                    shadows: Cesium.ShadowMode.ENABLED,\r\n                },\r\n\r\n                // c. 为飞机添加轨迹线\r\n                path: new Cesium.PathGraphics({\r\n                    resolution: 1,\r\n                    // 1. 设置尾迹时间为1800秒（30分钟）\r\n                    //    这意味着飞机会拖着一条代表过去30分钟轨迹的尾巴\r\n                    trailTime: 20,\r\n                    // 2. 设置领先时间为0，让飞机前方的路径不可见\r\n                    leadTime: 0,\r\n\r\n                    // 3.升级材质，让尾迹有“淡出”效果\r\n                    material: new Cesium.PolylineGlowMaterialProperty({\r\n                        glowPower: 0.2, // 让光晕更明显一点\r\n                        color: Cesium.Color.AQUAMARINE, // 换成科技蓝绿色，更酷炫\r\n\r\n                        // taperPower: 1.0 意味着尾迹从头到尾一样粗\r\n                        // taperPower < 1.0 意味着尾迹会从粗变细，产生“消散”感\r\n                        taperPower: 0.5\r\n                    }),\r\n                    width: 15\r\n                }),\r\n            });\r\n\r\n            // --- 3. 设置时钟和追踪 ---\r\n            viewer.clock.startTime = startTime.clone();\r\n            viewer.clock.stopTime = stopTime.clone();\r\n            viewer.clock.currentTime = startTime.clone();\r\n            viewer.clock.clockRange = Cesium.ClockRange.LOOP_STOP; // 循环播放\r\n            viewer.timeline.zoomTo(startTime, stopTime);\r\n            viewer.trackedEntity = aircraftEntity; // 让相机自动跟随飞机\r\n\r\n\r\n            console.log(\"动态飞机实体已创建！动画即将开始。\");\r\n        } catch (error) {\r\n            console.error(\"创建动态轨迹时发生错误：\", error);\r\n        }\r\n\r\n        /*\r\n        // --- 2. 加载我们的静态3D模型 ---\r\n        console.log(\"正在加载自定义3D模型...\");\r\n\r\n        // a. 定义模型的URL，它指向我们public文件夹里的文件\r\n        const modelUrl = `${process.env.BASE_URL}models/CesiumAir/Cesium_Air.glb`;\r\n\r\n        // b. 定义模型的位置和姿态 (我们把它放在北京天安门上空)\r\n        const position = Cesium.Cartesian3.fromDegrees(116.397, 39.908, 5000.0); // 经度, 纬度, 高度(米)\r\n        const heading = Cesium.Math.toRadians(0); // 朝向正北\r\n        const pitch = 0;\r\n        const roll = 0;\r\n        const hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);\r\n        const orientation = Cesium.Transforms.headingPitchRollQuaternion(position, hpr);\r\n\r\n        // c. 使用 viewer.entities.add() 创建模型实体\r\n        const aircraftEntity = viewer.entities.add({\r\n            name: \"My Custom Aircraft\",\r\n            position: position,\r\n            orientation: orientation,\r\n            model: {\r\n                uri: modelUrl,\r\n                minimumPixelSize: 128, // 保证在缩小时也能看见\r\n            },\r\n        });\r\n\r\n        console.log(\"自定义3D模型已成功添加！\");\r\n\r\n        // --- 3. 将相机聚焦到我们新添加的模型上 ---\r\n        viewer.trackedEntity = aircraftEntity;\r\n        */\r\n\r\n        // --- 2. 定义我们的3D样式规则 ---\r\n        //     这是一个基于3D Tiles Styling language的JSON对象\r\n        const buildingStyle = new Cesium.Cesium3DTileStyle({\r\n            // a. 定义颜色规则\r\n            color: {\r\n                // b. 这是一个条件表达式\r\n                //    格式：[\"condition\", \"value_if_true\", \"value_if_false\"]\r\n                conditions: [\r\n                    [\"${feature['cesium#estimatedHeight']} >= 100\", \"color('red')\"],\r\n                    [\"${feature['cesium#estimatedHeight']} >= 50\", \"color('orange')\"],\r\n                    [\"${feature['cesium#estimatedHeight']} >= 20\", \"color('yellow')\"],\r\n                    [\"true\", \"color('white', 0.8)\"]\r\n                ]\r\n            },\r\n            // c. 定义显示/隐藏规则\r\n            // show: \"${feature['cesium#estimatedHeight']} >= 5\" \r\n        });\r\n\r\n\r\n        // --- 3. 将样式应用到我们的3D Tileset上 --- \r\n        osmBuildings.style = buildingStyle;\r\n        console.log(\"已为建筑应用数据驱动的3D样式！\");\r\n\r\n\r\n\r\n        // --- b. 加载我们自己的后端城市面数据 ---\r\n        console.log(\"开始加载自定义城市面数据...\");\r\n        const ourApiUrl = `${process.env.BASE_URL}cities.json`;\r\n        const cityDataSource = await Cesium.GeoJsonDataSource.load(ourApiUrl, {\r\n            stroke: Cesium.Color.fromCssColorString('#FFD700').withAlpha(0.8),\r\n            strokeWidth: 2,\r\n            fill: Cesium.Color.fromCssColorString('#FFD700').withAlpha(0.2)\r\n        });\r\n        await viewer.dataSources.add(cityDataSource);\r\n        console.log(\"自定义城市面数据加载成功！\");\r\n\r\n        // --- c. 对我们自己的数据，进行遍历和样式增强 ---\r\n        const entities = cityDataSource.entities.values;\r\n        for (const entity of entities) {\r\n            if (entity.polygon) {\r\n                entity.polygon.material = Cesium.Color.ORANGE.withAlpha(0.5);\r\n                entity.polygon.extrudedHeight = 20000.0;\r\n            }\r\n            // !!! 确保你的后端API返回的properties里有city_name这个字段 !!!\r\n            entity.description = `<h2>${entity.properties.city_name?.getValue()}</h2><p>这是一个从我们自己后端加载的城市面！</p>`;\r\n        }\r\n\r\n        // --- d. 在所有数据都准备好后，再设置交互 ---\r\n        setupInteractions();\r\n\r\n\r\n        /*\r\n        // --- e. 最后，将相机飞到最佳视野 ---\r\n        // 我们选择聚焦到我们自己的数据上，而不是一个固定的点\r\n        await viewer.camera.flyTo({\r\n            // 目的地(destination)：相机的最终位置\r\n            // 我们使用经度、纬度、高度来定义\r\n            destination: Cesium.Cartesian3.fromDegrees(\r\n                108.0,  // 经度：中国的中心位置偏西一点\r\n                19.0,   // 纬度：中国的中心位置偏北一点\r\n                7600000.0 // 高度：6000公里，这个高度能看全中国\r\n            ),\r\n\r\n            // 姿态(orientation)：相机的朝向\r\n            orientation: {\r\n                // heading: 从正北方向顺时针旋转的角度\r\n                heading: Cesium.Math.toRadians(0.0), // 指向正北\r\n\r\n                // pitch: 俯仰角。-90度是垂直向下，0度是平视\r\n                // 我们给一个-45度，让相机有一个倾斜的、充满纵深感的视角\r\n                pitch: Cesium.Math.toRadians(-80.0),\r\n\r\n                // roll: 翻滚角，通常保持为0\r\n                roll: 0.0\r\n            },\r\n\r\n            // 飞行持续时间（秒）\r\n            duration: 4 // 让飞行过程更平滑\r\n        });\r\n        console.log(\"已启动相机飞行，飞向预设的中国区最佳视角。\");\r\n        */\r\n\r\n        // --- 1. 手动创建一个“北京”的点实体 ---\r\n        viewer.entities.add({\r\n            id: 'beijing-poi', // 给实体一个唯一的ID，方便以后查找\r\n            name: '中华人民共和国首都',\r\n            // a. 定义位置：使用经纬高坐标\r\n            position: Cesium.Cartesian3.fromDegrees(116.39, 39.91, 100), // 100米高度\r\n\r\n            // b. 定义外观：一个红色的、10像素大小的圆点\r\n            point: new Cesium.PointGraphics({\r\n                color: Cesium.Color.RED,\r\n                pixelSize: 10,\r\n                outlineColor: Cesium.Color.WHITE,\r\n                outlineWidth: 2\r\n            }),\r\n\r\n            // c. 定义标签\r\n            label: new Cesium.LabelGraphics({\r\n                text: '北京',\r\n                font: '16pt sans-serif',\r\n                fillColor: Cesium.Color.WHITE,\r\n                outlineColor: Cesium.Color.BLACK,\r\n                outlineWidth: 2,\r\n                style: Cesium.LabelStyle.FILL_AND_OUTLINE,\r\n                verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\r\n                pixelOffset: new Cesium.Cartesian2(0, -12) // 向上偏移12像素\r\n            })\r\n        });\r\n\r\n        // --- 2. 手动创建一条从北京到上海的线实体 ---\r\n        viewer.entities.add({\r\n            id: 'bj-sh-line',\r\n            name: '京沪线',\r\n            polyline: new Cesium.PolylineGraphics({\r\n                // a. 定义线的顶点坐标（经度, 纬度, 高度, 经度, 纬度, 高度, ...）\r\n                positions: Cesium.Cartesian3.fromDegreesArrayHeights([\r\n                    116.39, 39.91, 20000, // 北京，20km高空\r\n                    121.47, 31.23, 20000  // 上海，20km高空\r\n                ]),\r\n\r\n                // b. 定义线的样式\r\n                width: 3,\r\n                material: Cesium.Color.CYAN, // 线的颜色\r\n\r\n                // c. (可选) 让线贴着地球曲面\r\n                clampToGround: true\r\n            })\r\n        });\r\n\r\n        console.log(\"手动创建的京沪线实体已添加！\");\r\n\r\n    } catch (error) {\r\n        console.error(\"在设置地图图层和交互时发生错误: \", error);\r\n    }\r\n}\r\n\r\n// --- 3. 激活/关闭分析模式的函数 ---\r\nfunction toggleLineOfSight() {\r\n    isLosAnalysisActive.value = !isLosAnalysisActive.value;\r\n\r\n    if (isLosAnalysisActive.value) {\r\n        console.log(\"视线分析模式已激活。请在地球上点击选择起点。\");\r\n        // (交互逻辑由setupInteractions处理)\r\n    } else {\r\n        console.log(\"视线分析模式已关闭。\");\r\n        clearLosAnalysis();\r\n    }\r\n}\r\n\r\n// --- 4. 清除分析结果的函数 ---\r\nfunction clearLosAnalysis() {\r\n    losEntities.forEach(entity => viewer.entities.remove(entity));\r\n    losEntities.length = 0;\r\n    losStartPoint = null;\r\n}\r\n\r\n// --- 5. 执行分析的核心函数 ---\r\nfunction performLineOfSightAnalysis(endPoint) {\r\n    if (!losStartPoint || !endPoint) return;\r\n\r\n    const direction = Cesium.Cartesian3.normalize(\r\n        Cesium.Cartesian3.subtract(endPoint, losStartPoint, new Cesium.Cartesian3()),\r\n        new Cesium.Cartesian3()\r\n    );\r\n    const ray = new Cesium.Ray(losStartPoint, direction);\r\n\r\n    // 使用 scene.pickFromRay，它可以返回被遮挡物的信息\r\n    const intersection = viewer.scene.pickFromRay(ray, []);\r\n\r\n    const distanceToTarget = Cesium.Cartesian3.distance(losStartPoint, endPoint);\r\n    let color = Cesium.Color.GREEN;\r\n\r\n    // 检查是否有交点，并且交点距离小于目标点距离\r\n    if (Cesium.defined(intersection) && Cesium.Cartesian3.distance(losStartPoint, intersection.position) < distanceToTarget) {\r\n        color = Cesium.Color.RED;\r\n        // (可选) 在遮挡点创建一个标记\r\n        const obstructionMarker = viewer.entities.add({\r\n            position: intersection.position,\r\n            point: { color: Cesium.Color.YELLOW, pixelSize: 8, outlineWidth: 2, outlineColor: Cesium.Color.BLACK }\r\n        });\r\n        losEntities.push(obstructionMarker);\r\n    }\r\n\r\n    const line = viewer.entities.add({\r\n        polyline: { positions: [losStartPoint, endPoint], width: 3, material: color, clampToGround: false }\r\n    });\r\n    losEntities.push(line);\r\n}\r\n\r\n// --- 6. 统一的交互处理函数 ---\r\nfunction setupInteractions() {\r\n    if (!viewer) return;\r\n    sceneHandler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\r\n\r\n    sceneHandler.setInputAction((clickEvent) => {\r\n        // a. 如果当前正处于视线分析模式\r\n        if (isLosAnalysisActive.value) {\r\n            handleLosClick(clickEvent);\r\n        } else {\r\n            handleFeaturePick(clickEvent)\r\n        }\r\n    }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\r\n}\r\n\r\n// 新的、专门处理视线分析点击的函数\r\nfunction handleLosClick(clickEvent) {\r\n    const cartesian = viewer.scene.pickPosition(clickEvent.position);\r\n    if (!Cesium.defined(cartesian)) return;\r\n\r\n    if (!losStartPoint) {\r\n        // 设置起点\r\n        clearLosAnalysis();\r\n        losStartPoint = cartesian;\r\n        const startMarker = viewer.entities.add({\r\n            // a. 位置：就是我们刚刚点击拾取到的那个三维空间坐标\r\n            position: cartesian,\r\n\r\n            // b. 名字和描述 (可选，但推荐，方便调试)\r\n            name: '视线分析起点',\r\n            description: '这是视线分析的起点。',\r\n\r\n            // c. (核心) 外观：定义它应该被画成一个“点”\r\n            point: {\r\n                // i. 颜色：我们使用Cesium预设的颜色常量\r\n                color: Cesium.Color.LIME,\r\n\r\n                // ii. 大小（像素）\r\n                pixelSize: 10,\r\n\r\n                // iii. (可选) 添加一个白色的轮廓，让点更清晰\r\n                outlineColor: Cesium.Color.WHITE,\r\n                outlineWidth: 2\r\n            }\r\n        });\r\n        losEntities.push(startMarker);\r\n    } else {\r\n        // 设置终点并执行分析\r\n        const endPoint = cartesian;\r\n        const endMarker = viewer.entities.add({\r\n            // a. 位置：就是第二次点击拾取到的坐标\r\n            position: cartesian, // 或者 endPoint 变量\r\n\r\n            // b. 名字和描述\r\n            name: '视线分析终点',\r\n            description: '这是视线分析的终点。',\r\n\r\n            // c. 外观：定义它是一个点\r\n            point: {\r\n                // i. 颜色：换成红色\r\n                color: Cesium.Color.RED,\r\n\r\n                // ii. 大小\r\n                pixelSize: 10,\r\n\r\n                // iii. 轮廓\r\n                outlineColor: Cesium.Color.WHITE,\r\n                outlineWidth: 2\r\n            }\r\n        });\r\n        losEntities.push(endMarker);\r\n        performLineOfSightAnalysis(endPoint);\r\n        losStartPoint = null; // 重置，准备下一次\r\n    }\r\n}\r\n\r\nfunction handleFeaturePick(clickEvent) {\r\n\r\n    // 1. 使用 viewer.scene.pick() 拾取点击位置的对象\r\n    const pickedObject = viewer.scene.pick(clickEvent.position);\r\n\r\n    // 2. 检查拾取结果是否存在\r\n    if (!Cesium.defined(pickedObject)) {\r\n        console.log(\"点击到了空白处。\");\r\n        return; // 点击到空白处，直接返回\r\n    }\r\n    // --- 3. (核心) 判断拾取到的对象类型，并执行不同逻辑 ---\r\n    // a. 如果点到的是一个Entity (我们手动创建的点、线、或者GeoJSON加载的面)\r\n    if (pickedObject.id instanceof Cesium.Entity) {\r\n        const entity = pickedObject.id;\r\n        console.log(`拾取到实体(Entity): ${entity.name || entity.id}`);\r\n\r\n        // 让Cesium的默认选中行为生效（绿色框 + InfoBox）\r\n        viewer.selectedEntity = entity;\r\n        // (可选) 如果你想，你依然可以手动控制相机\r\n        viewer.flyTo(entity);\r\n        return; // 处理完毕，返回\r\n    }\r\n\r\n    // b. 如果点到的是一个3D Tileset的Feature (我们的OSM建筑)\r\n    if (pickedObject instanceof Cesium.Cesium3DTileFeature) {\r\n        const feature = pickedObject;\r\n        console.log(\"拾取到3D建筑要素！\");\r\n\r\n        // 打印所有属性到控制台\r\n        const propertyIds = feature.getPropertyIds();\r\n        console.log(\"--- 属性详情 ---\");\r\n        const properties = {};\r\n        propertyIds.forEach(id => {\r\n            const value = feature.getProperty(id);\r\n            properties[id] = value;\r\n            console.log(`${id}:`, value);\r\n        });\r\n\r\n        // 手动更新InfoBox的内容，让它也能显示3D Tile的属性\r\n        viewer.selectedEntity = new Cesium.Entity({\r\n            name: `建筑 (ID: ${feature.featureId})`,\r\n            description: createDescriptionHtml(properties)\r\n        });\r\n        return; // 处理完毕，返回\r\n    }\r\n}\r\n\r\nfunction createDescriptionHtml(properties) {\r\n    let html = '<table class=\"cesium-infoBox-defaultTable\"><tbody>';\r\n    for (const key in properties) {\r\n        if (Object.prototype.hasOwnProperty.call(properties, key)) {\r\n            const value = properties[key];\r\n            html += `<tr><th>${key}</th><td>${value}</td></tr>`;\r\n        }\r\n    }\r\n    html += '</tbody></table>';\r\n    return html;\r\n}\r\n\r\n\r\nonUnmounted(() => {\r\n    if (viewer) {\r\n        viewer.destroy();\r\n        viewer = null;\r\n    }\r\n\r\n    if (sceneHandler) sceneHandler.destroy(); // 销毁事件处理器\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.map-page-container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n#cesiumContainer {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.analysis-tools {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n    z-index: 1000;\r\n}\r\n</style>","import script from \"./Map3DPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Map3DPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Map3DPage.vue?vue&type=style&index=0&id=3e00ef34&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3e00ef34\"]])\n\nexport default __exports__","// 1. 导入必要的函数和我们创建的页面组件\r\nimport { createRouter, createWebHistory } from 'vue-router';\r\nimport HomePage from '../views/HomePage.vue';\r\nimport MapPage from '../views/MapPage.vue';\r\nimport AboutPage from '../views/AboutPage.vue';\r\nimport Map3DPage from '../views/Map3DPage.vue';\r\n\r\n// 2. 定义路由表 (routes) - 这是一个规则数组\r\nconst routes = [\r\n    // 规则一：当URL路径是'/'时\r\n    {\r\n        path: '/',          // 匹配的URL路径\r\n        name: 'Home',       // 给这条路由起个名字，方便以后编程式导航\r\n        component: HomePage // 渲染 HomePage.vue 这个组件\r\n    },\r\n    // 规则二：当URL路径是'/map'时\r\n    {\r\n        path: '/map',\r\n        name: 'Map',\r\n        component: MapPage\r\n    },\r\n    {\r\n        path: '/map3D',\r\n        name: 'Map3D',\r\n        component: Map3DPage\r\n    },\r\n    // 规则三：当URL路径是'/about'时\r\n    {\r\n        path: '/about',\r\n        name: 'About',\r\n        component: AboutPage\r\n    }\r\n];\r\n\r\n// 3. 创建 router 实例\r\nconst router = createRouter({\r\n    // history 模式：使用 createWebHistory() 来获得干净的URL（如 /about）\r\n    // 这是推荐的模式，依赖HTML5 History API\r\n    history: createWebHistory(process.env.BASE_URL),\r\n    // 将我们定义的路由规则数组传递给 router\r\n    routes: routes\r\n});\r\n\r\n// 4. 将 router 实例导出，以便在 main.js 中使用\r\nexport default router;","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router/Index.js'\nimport { createPinia } from 'pinia'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\nimport 'cesium/Build/Cesium/Widgets/widgets.css';\n\nconst app = createApp(App)\n\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n    app.component(key, component)\n}\n\napp.use(createPinia())\napp.use(router)\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_first_app\"] = self[\"webpackChunkmy_first_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(8798); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","class","_hoisted_3","_createVNode","_component_router_link","to","_cache","_hoisted_4","_component_router_view","__exports__","script","render","useMapStore","defineStore","provinces","ref","selectedFeature","mapStats","cityCount","selectedProvinceCitiesStats","isLoadingStats","cityDisplayMode","selectedFeatureProperties","computed","value","feature","properties","provinceLayerVisible","get","length","every","p","visible","set","forEach","initializeProvinces","data","setCityDisplayMode","mode","setSelectedFeature","type","updateMapStats","stats","async","fetchCityStatsForProvince","provinceName","window","allProvinceStats","response","axios","error","console","mapStore","isCollapsed","visibleProvinceNames","filter","map","name","newVisibleNames","province","includes","_normalizeClass","collapsed","onClick","$event","_component_el_icon","_createBlock","_unref","ElIconArrowRight","key","ElIconArrowLeft","_component_el_card","header","_withCtx","_component_el_checkbox","label","size","_component_el_divider","_component_el_radio_group","_component_el_radio_button","_component_el_checkbox_group","_Fragment","_renderList","id","ArrowRightBold","ArrowLeftBold","_component_el_button","icon","Close","circle","title","Object","keys","_component_el_descriptions","column","border","_component_el_descriptions_item","_component_el_empty","description","gaugeChartDom","pieChartDom","gaugeChart","pieChart","shouldShowPieChart","chartTitle","renderGaugeChart","echarts","setOption","series","detail","formatter","renderPieChart","chartData","city","city_name","area_sqm","toFixed","sort","a","b","slice","text","left","textStyle","fontSize","tooltip","trigger","confine","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","watch","nextTick","dispose","deep","immediate","newCollapsedState","setTimeout","resize","onUnmounted","_toDisplayString","style","MAPTILER_KEY","mapContainer","highlightSource","setupMap","provinceResponse","cityPointsResponse","Promise","all","fetch","provinceGeoJsonData","json","cityPointsGeoJson","initialProvinces","features","f","addSource","promoteId","addLayer","source","paint","tileJsonUrl","tileJsonResponse","realSourceLayerName","vector_layers","log","getSource","getLayer","cityLayerVisible","cluster","clusterMaxZoom","clusterRadius","layout","on","e","queryRenderedFeatures","point","layers","clusterId","cluster_id","getClusterExpansionZoom","err","zoom","easeTo","center","geometry","coordinates","setupInteractions","setupWatchers","updateChartData","getCanvas","cursor","hoveredProvinceId","provinceFeatures","cityFeatures","setFeatureState","hover","lastSelectedProvinceId","newSelection","isStyleLoaded","selected","setData","warn","newProvinces","visibleNames","setFilter","newMode","setLayoutProperty","layerId","mapboxgl","onMounted","styleUrl","container","remove","LayerControl","FeaturePanel","StatisticsChart","CESIUM_BASE_URL","cesiumContainer","viewer","isLosAnalysisActive","losStartPoint","losEntities","sceneHandler","setupMapLayersAndInteractions","imageryProvider","terrainProvider","osmBuildings","Cesium","fromAssetId","scene","primitives","add","globe","depthTestAgainstTerrain","positionProperty","startTime","fromDate","Date","UTC","stopTime","addSeconds","beijingPosition","fromDegrees","addSample","xianTime","xianPosition","shanghaiPosition","modelUrl","aircraftEntity","entities","availability","start","stop","position","orientation","model","uri","minimumPixelSize","colorBlendMode","HIGHLIGHT","silhouetteColor","fromCssColorString","silhouetteSize","color","LEMONCHIFFON","shadows","ENABLED","path","resolution","trailTime","leadTime","material","glowPower","AQUAMARINE","taperPower","width","clock","clone","currentTime","clockRange","LOOP_STOP","timeline","zoomTo","trackedEntity","buildingStyle","conditions","ourApiUrl","cityDataSource","load","stroke","withAlpha","strokeWidth","fill","dataSources","values","entity","polygon","ORANGE","extrudedHeight","getValue","RED","pixelSize","outlineColor","WHITE","outlineWidth","font","fillColor","BLACK","FILL_AND_OUTLINE","verticalOrigin","BOTTOM","pixelOffset","polyline","positions","fromDegreesArrayHeights","CYAN","clampToGround","toggleLineOfSight","clearLosAnalysis","performLineOfSightAnalysis","endPoint","direction","normalize","subtract","ray","intersection","pickFromRay","distanceToTarget","distance","GREEN","obstructionMarker","YELLOW","push","line","canvas","setInputAction","clickEvent","handleLosClick","handleFeaturePick","LEFT_CLICK","cartesian","pickPosition","endMarker","startMarker","LIME","pickedObject","pick","selectedEntity","flyTo","propertyIds","getPropertyIds","getProperty","featureId","createDescriptionHtml","html","prototype","hasOwnProperty","call","defaultAccessToken","undefined","animation","geocoder","homeButton","sceneModePicker","baseLayerPicker","navigationHelpButton","shouldAnimate","destroy","routes","component","HomePage","MapPage","Map3DPage","AboutPage","router","createRouter","history","createWebHistory","process","app","createApp","App","entries","ElementPlusIconsVue","use","createPinia","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}