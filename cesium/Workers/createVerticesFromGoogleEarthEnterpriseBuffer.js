/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.132
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as Dt,b as Gt}from"./chunk-7HTKERZY.js";import{a as Lt}from"./chunk-WZDE3RYP.js";import{a as lt}from"./chunk-DQQ63PYM.js";import{a as qt}from"./chunk-CNCV5UL7.js";import"./chunk-DEPHB2WM.js";import"./chunk-TCGIRNHN.js";import{a as kt}from"./chunk-N4VJKXZS.js";import"./chunk-DMEY62ID.js";import"./chunk-HTFSEEMT.js";import{d as zt}from"./chunk-4IW2T6GF.js";import{b as $,g as Ot,h as Vt}from"./chunk-PSPPBZWI.js";import"./chunk-AU7IKHOH.js";import{a as P,b as N,c as wt,d as Ut}from"./chunk-64RSHJUE.js";import{a as r}from"./chunk-3SSKC3VN.js";import"./chunk-OSW76XDF.js";import{a as Ht}from"./chunk-ED5JPB3S.js";import"./chunk-LEYMRMBK.js";import{e as ht}from"./chunk-VTAIKJXX.js";var $t=Uint16Array.BYTES_PER_ELEMENT,mt=Int32Array.BYTES_PER_ELEMENT,Pt=Uint32Array.BYTES_PER_ELEMENT,te=Float32Array.BYTES_PER_ELEMENT,H=Float64Array.BYTES_PER_ELEMENT;function tt(t,e,n){n=n??r;let i=t.length;for(let o=0;o<i;++o)if(n.equalsEpsilon(t[o],e,r.EPSILON12))return o;return-1}function ee(t,e){t.ellipsoid=Ut.clone(t.ellipsoid),t.rectangle=Vt.clone(t.rectangle);let n=re(t.buffer,t.relativeToCenter,t.ellipsoid,t.rectangle,t.nativeRectangle,t.exaggeration,t.exaggerationRelativeHeight,t.skirtHeight,t.includeWebMercatorT,t.negativeAltitudeExponentBias,t.negativeElevationThreshold),i=n.vertices;e.push(i.buffer);let r=n.indices;return e.push(r.buffer),{vertices:i.buffer,indices:r.buffer,numberOfAttributes:n.encoding.stride,minimumHeight:n.minimumHeight,maximumHeight:n.maximumHeight,boundingSphere3D:n.boundingSphere3D,orientedBoundingBox:n.orientedBoundingBox,occludeePointInScaledSpace:n.occludeePointInScaledSpace,encoding:n.encoding,vertexCountWithoutSkirts:n.vertexCountWithoutSkirts,indexCountWithoutSkirts:n.indexCountWithoutSkirts,westIndicesSouthToNorth:n.westIndicesSouthToNorth,southIndicesEastToWest:n.southIndicesEastToWest,eastIndicesNorthToSouth:n.eastIndicesNorthToSouth,northIndicesWestToEast:n.northIndicesWestToEast}}var u=new N,G=new P,oe=new P,ne=new P,ie=new $;function re(t,e,n,i,o,a,s,l,h,c,d){let m,g,p,I,E,f;ht(i)?(m=i.west,g=i.south,p=i.east,I=i.north,E=i.width,f=i.height):(m=r.toRadians(o.west),g=r.toRadians(o.south),p=r.toRadians(o.east),I=r.toRadians(o.north),E=r.toRadians(i.width),f=r.toRadians(i.height));let T,S,x=[g,I],w=[m,p],k=Ot.eastNorthUpToFixedFrame(e,n),R=$.inverseTransformation(k,ie);h&&(T=lt.geodeticLatitudeToMercatorAngle(g),S=1/(lt.geodeticLatitudeToMercatorAngle(I)-T));let b=1!==a,M=new DataView(t),y=Number.POSITIVE_INFINITY,A=Number.NEGATIVE_INFINITY,B=oe;B.x=Number.POSITIVE_INFINITY,B.y=Number.POSITIVE_INFINITY,B.z=Number.POSITIVE_INFINITY;let v=ne;v.x=Number.NEGATIVE_INFINITY,v.y=Number.NEGATIVE_INFINITY,v.z=Number.NEGATIVE_INFINITY;let F,_,W=0,j=0,C=0;for(_=0;_<4;++_){let t=W;F=M.getUint32(t,!0),t+=Pt;let e=r.toRadians(180*M.getFloat64(t,!0));t+=H,-1===tt(w,e)&&w.push(e);let n=r.toRadians(180*M.getFloat64(t,!0));t+=H,-1===tt(x,n)&&x.push(n),t+=2*H;let i=M.getInt32(t,!0);t+=mt,j+=i,i=M.getInt32(t,!0),C+=3*i,W+=F+Pt}let Y=[],U=[],V=new Array(j),O=new Array(j),D=new Array(j),L=h?new Array(j):[],K=b?new Array(j):[],z=new Array(C),J=[],X=[],Z=[],q=[],Q=0,et=0;for(W=0,_=0;_<4;++_){F=M.getUint32(W,!0),W+=Pt;let t=W,e=r.toRadians(180*M.getFloat64(W,!0));W+=H;let i=r.toRadians(180*M.getFloat64(W,!0));W+=H;let o=r.toRadians(180*M.getFloat64(W,!0)),a=.5*o;W+=H;let s=r.toRadians(180*M.getFloat64(W,!0)),l=.5*s;W+=H;let E=M.getInt32(W,!0);W+=mt;let f=M.getInt32(W,!0);W+=mt,W+=mt;let k=new Array(E);for(let H=0;H<E;++H){let t=e+M.getUint8(W++)*o;u.longitude=t;let E=i+M.getUint8(W++)*s;u.latitude=E;let f=M.getFloat32(W,!0);if(W+=te,0!==f&&f<d&&(f*=-Math.pow(2,c)),f*=6371010,u.height=f,-1!==tt(w,t)||-1!==tt(x,E)){let t=tt(Y,u,N);if(-1!==t){k[H]=U[t];continue}Y.push(N.clone(u)),U.push(Q)}k[H]=Q,Math.abs(t-m)<a?J.push({index:Q,cartographic:N.clone(u)}):Math.abs(t-p)<a?Z.push({index:Q,cartographic:N.clone(u)}):Math.abs(E-g)<l?X.push({index:Q,cartographic:N.clone(u)}):Math.abs(E-I)<l&&q.push({index:Q,cartographic:N.clone(u)}),y=Math.min(f,y),A=Math.max(f,A),D[Q]=f;let F=n.cartographicToCartesian(u);if(V[Q]=F,h&&(L[Q]=(lt.geodeticLatitudeToMercatorAngle(E)-T)*S),b){let t=n.geodeticSurfaceNormal(F);K[Q]=t}$.multiplyByPoint(R,F,G),P.minimumByComponent(G,B,B),P.maximumByComponent(G,v,v);let _=(t-m)/(p-m);_=r.clamp(_,0,1);let j=(E-g)/(I-g);j=r.clamp(j,0,1),O[Q]=new wt(_,j),++Q}let _=3*f;for(let n=0;n<_;++n,++et)z[et]=k[M.getUint16(W,!0)],W+=$t;if(F!==W-t)throw new Ht("Invalid terrain tile.")}V.length=Q,O.length=Q,D.length=Q,h&&(L.length=Q),b&&(K.length=Q);let nt=Q,it=et,rt={hMin:y,lastBorderPoint:void 0,skirtHeight:l,toENU:R,ellipsoid:n,minimum:B,maximum:v};J.sort(function(t,e){return e.cartographic.latitude-t.cartographic.latitude}),X.sort(function(t,e){return t.cartographic.longitude-e.cartographic.longitude}),Z.sort(function(t,e){return t.cartographic.latitude-e.cartographic.latitude}),q.sort(function(t,e){return e.cartographic.longitude-t.cartographic.longitude});let ot=1e-5;if(gt(V,D,O,L,K,z,rt,J,-ot*E,!0,-ot*f),gt(V,D,O,L,K,z,rt,X,-ot*f,!1),gt(V,D,O,L,K,z,rt,Z,ot*E,!0,ot*f),gt(V,D,O,L,K,z,rt,q,ot*f,!1),J.length>0&&q.length>0){let t=J[0].index,e=nt,n=q[q.length-1].index,i=V.length-1;z.push(n,i,e,e,t,n)}j=V.length;let at,ut=zt.fromPoints(V);ht(i)&&(at=qt.fromRectangle(i,y,A,n));let st=new Dt(n).computeHorizonCullingPointPossiblyUnderEllipsoid(e,V,y),ct=new kt(B,v,e),dt=new Gt(e,ct,rt.hMin,A,k,!1,h,b,a,s),pt=new Float32Array(j*dt.stride),It=0;for(let r=0;r<j;++r)It=dt.encode(pt,It,V[r],O[r],D[r],void 0,L[r],K[r]);let Et=J.map(function(t){return t.index}).reverse(),Nt=X.map(function(t){return t.index}).reverse(),ft=Z.map(function(t){return t.index}).reverse(),Tt=q.map(function(t){return t.index}).reverse();return Nt.unshift(ft[ft.length-1]),Nt.push(Et[0]),Tt.unshift(Et[Et.length-1]),Tt.push(ft[0]),{vertices:pt,indices:new Uint16Array(z),maximumHeight:A,minimumHeight:y,encoding:dt,boundingSphere3D:ut,orientedBoundingBox:at,occludeePointInScaledSpace:st,vertexCountWithoutSkirts:nt,indexCountWithoutSkirts:it,westIndicesSouthToNorth:Et,southIndicesEastToWest:Nt,eastIndicesNorthToSouth:ft,northIndicesWestToEast:Tt}}function gt(t,e,n,i,o,a,s,l,h,c,d){let m=l.length;for(let g=0;g<m;++g){let p=l[g],I=p.cartographic,E=p.index,f=t.length,T=I.longitude,S=I.latitude;S=r.clamp(S,-r.PI_OVER_TWO,r.PI_OVER_TWO);let x=I.height-s.skirtHeight;s.hMin=Math.min(s.hMin,x),N.fromRadians(T,S,x,u),c&&(u.longitude+=h),c?g===m-1?u.latitude+=d:0===g&&(u.latitude-=d):u.latitude+=h;let w=s.ellipsoid.cartographicToCartesian(u);t.push(w),e.push(x),n.push(wt.clone(n[E])),i.length>0&&i.push(i[E]),o.length>0&&o.push(o[E]),$.multiplyByPoint(s.toENU,w,G);let k=s.minimum,H=s.maximum;P.minimumByComponent(G,k,k),P.maximumByComponent(G,H,H);let R=s.lastBorderPoint;if(ht(R)){let t=R.index;a.push(t,f-1,f,f,E,t)}s.lastBorderPoint=p}}var we=Lt(ee);export{we as default};