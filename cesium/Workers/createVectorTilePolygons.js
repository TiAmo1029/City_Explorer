/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.132
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as R}from"./chunk-HMIYSTF6.js";import{a as It}from"./chunk-WZDE3RYP.js";import{a as M}from"./chunk-CNCV5UL7.js";import{a as bt}from"./chunk-DEPHB2WM.js";import"./chunk-TCGIRNHN.js";import"./chunk-N4VJKXZS.js";import"./chunk-DMEY62ID.js";import"./chunk-HTFSEEMT.js";import{a as W}from"./chunk-OFUUQVMR.js";import"./chunk-4IW2T6GF.js";import{h as z}from"./chunk-PSPPBZWI.js";import"./chunk-AU7IKHOH.js";import{a as o,b as nt,d as j}from"./chunk-64RSHJUE.js";import{a as et}from"./chunk-3SSKC3VN.js";import"./chunk-OSW76XDF.js";import"./chunk-ED5JPB3S.js";import"./chunk-LEYMRMBK.js";import{e as A}from"./chunk-VTAIKJXX.js";var kt=new o,Bt=new j,Nt=new z,E={min:void 0,max:void 0,indexBytesPerElement:void 0};function Pt(t){let e=new Float64Array(t),n=0;E.indexBytesPerElement=e[n++],E.min=e[n++],E.max=e[n++],o.unpack(e,n,kt),n+=o.packedLength,j.unpack(e,n,Bt),n+=j.packedLength,z.unpack(e,n,Nt)}function Tt(t){let e=t.length,n=0;for(let r=0;r<e;++r)n+=R.packedLength+3+t[r].batchIds.length;return n}function Ct(t,e,n){let r=e.length,a=2+r*M.packedLength+1+Tt(n),o=new Float64Array(a),i=0;o[i++]=t,o[i++]=r;for(let f=0;f<r;++f)M.pack(e[f],o,i),i+=M.packedLength;let s=n.length;o[i++]=s;for(let f=0;f<s;++f){let t=n[f];R.pack(t.color,o,i),i+=R.packedLength,o[i++]=t.offset,o[i++]=t.count;let e=t.batchIds,r=e.length;o[i++]=r;for(let n=0;n<r;++n)o[i++]=e[n]}return o}var yt=32767,wt=new o,Ht=new o,St=new o,Ut=new o,Ft=new o,Lt=new nt,Mt=new z;function Rt(t,e){let n;Pt(t.packedBuffer),n=2===E.indexBytesPerElement?new Uint16Array(t.indices):new Uint32Array(t.indices);let r=new Uint16Array(t.positions),a=new Uint32Array(t.counts),i=new Uint32Array(t.indexCounts),s=new Uint32Array(t.batchIds),f=new Uint32Array(t.batchTableColors),l=new Array(a.length),c=kt,h=Bt,u=Nt,m=E.min,p=E.max,d=t.minimumHeights,I=t.maximumHeights;A(d)&&A(I)&&(d=new Float32Array(d),I=new Float32Array(I));let g,k,w,b=r.length/2,y=r.subarray(0,b),N=r.subarray(b,2*b);bt.zigZagDeltaDecode(y,N);let T=new Float64Array(3*b);for(g=0;g<b;++g){let t=y[g],e=N[g],n=et.lerp(u.west,u.east,t/yt),r=et.lerp(u.south,u.north,e/yt),a=nt.fromRadians(n,r,0,Lt),i=h.cartographicToCartesian(a,wt);o.pack(i,T,3*g)}let x=a.length,j=new Array(x),L=new Array(x),S=0,U=0;for(g=0;g<x;++g)j[g]=S,L[g]=U,S+=a[g],U+=i[g];let F=new Float32Array(3*b*2),P=new Uint16Array(2*b),B=new Uint32Array(L.length),O=new Uint32Array(i.length),H=[],C={};for(g=0;g<x;++g)w=f[g],A(C[w])?(C[w].positionLength+=a[g],C[w].indexLength+=i[g],C[w].batchIds.push(g)):C[w]={positionLength:a[g],indexLength:i[g],offset:0,indexOffset:0,batchIds:[g]};let D,V=0,Y=0;for(w in C)if(C.hasOwnProperty(w)){D=C[w],D.offset=V,D.indexOffset=Y;let t=2*D.positionLength,e=2*D.indexLength+6*D.positionLength;V+=t,Y+=e,D.indexLength=e}let _=[];for(w in C)C.hasOwnProperty(w)&&(D=C[w],_.push({color:R.fromRgba(parseInt(w)),offset:D.indexOffset,count:D.indexLength,batchIds:D.batchIds}));for(g=0;g<x;++g){w=f[g],D=C[w];let t=D.offset,e=3*t,r=t,b=j[g],y=a[g],E=s[g],N=m,x=p;A(d)&&A(I)&&(N=d[g],x=I[g]);let S=Number.POSITIVE_INFINITY,U=Number.NEGATIVE_INFINITY,R=Number.POSITIVE_INFINITY,V=Number.NEGATIVE_INFINITY;for(k=0;k<y;++k){let t=o.unpack(T,3*b+3*k,wt);h.scaleToGeodeticSurface(t,t);let n=h.cartesianToCartographic(t,Lt),a=n.latitude,i=n.longitude;S=Math.min(a,S),U=Math.max(a,U),R=Math.min(i,R),V=Math.max(i,V);let s=h.geodeticSurfaceNormal(t,Ht),f=o.multiplyByScalar(s,N,St),l=o.add(t,f,Ut);f=o.multiplyByScalar(s,x,f);let u=o.add(t,f,Ft);o.subtract(u,c,u),o.subtract(l,c,l),o.pack(u,F,e),o.pack(l,F,e+3),P[r]=E,P[r+1]=E,e+=6,r+=2}u=Mt,u.west=R,u.east=V,u.south=S,u.north=U,l[g]=M.fromRectangle(u,m,p,h);let W=D.indexOffset,Y=L[g],_=i[g];for(B[g]=W,k=0;k<_;k+=3){let e=n[Y+k]-b,r=n[Y+k+1]-b,a=n[Y+k+2]-b;H[W++]=2*e+t,H[W++]=2*r+t,H[W++]=2*a+t,H[W++]=2*a+1+t,H[W++]=2*r+1+t,H[W++]=2*e+1+t}for(k=0;k<y;++k){let e=k,n=(k+1)%y;H[W++]=2*e+1+t,H[W++]=2*n+t,H[W++]=2*e+t,H[W++]=2*e+1+t,H[W++]=2*n+1+t,H[W++]=2*n+t}D.offset+=2*y,D.indexOffset=W,O[g]=W-B[g]}H=W.createTypedArray(F.length/3,H);let G=_.length;for(let o=0;o<G;++o){let t=_[o].batchIds,e=0,n=t.length;for(let r=0;r<n;++r)e+=O[t[r]];_[o].count=e}let v=2===H.BYTES_PER_ELEMENT?W.UNSIGNED_SHORT:W.UNSIGNED_INT,J=Ct(v,l,_);return e.push(F.buffer,H.buffer,B.buffer,O.buffer,P.buffer,J.buffer),{positions:F.buffer,indices:H.buffer,indexOffsets:B.buffer,indexCounts:O.buffer,batchIds:P.buffer,packedBuffer:J.buffer}}var Jt=It(Rt);export{Jt as default};